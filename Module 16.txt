create database kodilla_course;

show DATABASES;

create user 'kodilla_user' identified with MYSQL_NATIVE_PASSWORD by 'kodilla_Pass123';
GRANT ALL PRIVILEGES ON kodilla_course.* to kodilla_user;

show TABLES;

CREATE TABLE USERS
(
    ID   SERIAL PRIMARY KEY,
    FIRSTNAME   VARCHAR(100),
    LASTNAME VARCHAR(100)
    );

CREATE TABLE POSTS
(
    ID  SERIAL PRIMARY KEY,
    USER_ID  BIGINT UNSIGNED NOT NULL,
    BODY   VARCHAR(1024),
    FOREIGN KEY (USER_ID) REFERENCES USERS(ID)
    );

SELECT * FROM USERS;

INSERT INTO USERS (FIRSTNAME, LASTNAME)  VALUES ('John','Smith');

COMMIT;

INSERT INTO POSTS (USER_ID, BODY)
VALUES (1, 'This is my first post on this forum!');

COMMIT;

SELECT * FROM POSTS;

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Zachary', 'Lee');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Stephanie', 'Kovalsky');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Thomas', 'Landgren');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('John', 'Thomson');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'This is my first post too!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (3, 'How are you?');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (1, 'Quite good, thanks bro!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (4, 'Yo all! Here is Thomas!');

COMMIT;

SELECT * FROM  USERS;

SELECT  * FROM  POSTS;


CREATE TABLE ISSUESLISTS(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(100)
);

CREATE TABLE ISSUES(
    ID SERIAL PRIMARY KEY,
    ISSUESLIST_ID BIGINT UNSIGNED NOT NULL,
    SUMMARY VARCHAR(100),
    DESCRIPTION VARCHAR(100),
    FOREIGN KEY (ISSUESLIST_ID) REFERENCES ISSUESLISTS(ID),
    USER_ID_ASSIGNEDTO BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (USER_ID_ASSIGNEDTO) REFERENCES USERS(ID)
);

INSERT INTO ISSUESLISTS(NAME)
VALUES ('ToDo');

INSERT INTO ISSUESLISTS(NAME)
VALUES ('In progress');

INSERT INTO ISSUESLISTS(NAME)
VALUES ('Done');

INSERT INTO  ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (1,3,'Spring', 'Weather is warm but only sometimes coolness', 4);

INSERT INTO  ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (2,2,'Summary', 'Weather is hot', 2);

INSERT INTO  ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (3,3,'Autumn', 'Weather is coolness and windy', 3);

INSERT INTO  ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (4,1,'Winter', 'Weather is coldy and snowy', 4);

INSERT INTO  ISSUES (ID, ISSUESLIST_ID, SUMMARY, DESCRIPTION,USER_ID_ASSIGNEDTO)
VALUES (5,1,'Nothing', 'Text', 5);

COMMIT;

SELECT * FROM ISSUES;

SELECT  * FROM  ISSUESLISTS;

SELECT ID, LASTNAME FROM USERS;

SELECT ID, FIRSTNAME FROM USERS
WHERE ID >= 3;

SELECT ID, FIRSTNAME FROM USERS
WHERE (ID >= 4 AND ID <= 10)
   OR ID = 1;

SELECT COUNT(*) FROM USERS;

SELECT MIN(ID), MAX(ID) FROM USERS;

SELECT SUM(ID), AVG(ID) FROM USERS;

SELECT SUM(ID) AS TOTAL, AVG(ID) AS AVERAGE FROM USERS;

SELECT U.FIRSTNAME, U.LASTNAME, P.BODY
FROM USERS U
         JOIN POSTS P ON U.ID = P.USER_ID;

SELECT USER_ID, COUNT(*) AS POSTS_NUMBER
FROM POSTS
GROUP BY USER_ID;

SELECT USER_ID, COUNT(*) AS POSTS_NUMBER
FROM POSTS
GROUP BY USER_ID
HAVING COUNT(*) > 1;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1;

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1
ORDER BY U.LASTNAME, U.FIRSTNAME;

SELECT L.NAME, I.SUMMARY
FROM ISSUESLISTS L
JOIN ISSUES I ON L.ID = I.ISSUESLIST_ID;

SELECT U.FIRSTNAME, U.LASTNAME, I.DESCRIPTION
FROM USERS U
JOIN  ISSUES I ON U.ID = I.ISSUESLIST_ID;

UPDATE POSTS
SET USER_ID = 3
WHERE ID = 4;

COMMIT;

SELECT * FROM POSTS;

DELETE FROM POSTS
WHERE ID = 4;

COMMIT;

SELECT * FROM POSTS;

INSERT INTO POSTS(ID, USER_ID, BODY)
VALUES(6,2,'Bye');

COMMIT;

UPDATE POSTS
SET POSTS.BODY = 'Hey Adrian, How are you today ? :D'
WHERE ID = 5;

COMMIT;

SELECT * FROM POSTS;

DELETE FROM POSTS
WHERE ID = 6;

COMMIT;

SELECT * FROM POSTS;


INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'Welcome');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (4, 'Hey');

COMMIT;

SELECT P.USER_ID, U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM POSTS P JOIN USERS U ON P.USER_ID = U.ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1;

SELECT P.USER_ID, U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM POSTS P, USERS U
WHERE P.USER_ID = U.ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1;